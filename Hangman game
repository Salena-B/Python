import time
import random
import tkinter
import tkinter.messagebox
import player
import winsound
#Salena Bower
#salena.bower001@albright.edu
#creates GUI class
class PlayerInformation:
    def __init__(self):
        #create the window
        self.main_window = tkinter.Tk()
        #create the frames
        self.top_frame = tkinter.Frame(self.main_window)
        self.second_frame = tkinter.Frame(self.main_window)
        self.third_frame = tkinter.Frame(self.main_window)
        self.bottom_frame = tkinter.Frame(self.main_window)
        #pack the frames
        self.top_frame.pack()
        self.second_frame.pack()
        self.third_frame.pack()
        self.bottom_frame.pack()
        #create the buttons
        self.load = tkinter.Button(self.bottom_frame,
                                        text = 'Load Information',
                                        command = self.load)
        
        self.quit = tkinter.Button(self.bottom_frame, text = 'Continue',
                                   command = self.main_window.destroy)
        #pack the buttons
        self.load.pack(side = 'left')

        #creates label1 
        self.label1 = tkinter.Label(self.top_frame,text =
                                    'Player Information')
        self.label1.pack()
        
        #create label 2
        self.label2 = tkinter.Label(self.second_frame,
                                    text = 'Name: ')
        self.label2_entry = tkinter.Entry(self.second_frame, width = 10)
        self.label2.pack(side = 'left')
        self.label2_entry.pack(side = 'left')
        
        #create result label
        self.label3 = tkinter.Label(self.third_frame,
                                    text = 'Age: ')
        self.label3_entry = tkinter.Entry(self.third_frame, width = 10)
        self.label3.pack(side = 'left')
        self.label3_entry.pack(side = 'left')
        
        #start mainloop
        tkinter.mainloop()
        
    def load(self):
        #gets input, validates it, and adds to player information
        self.name = str(self.label2_entry.get())
        if len(self.name) < 1:
            tkinter.messagebox.showinfo('Invalid','Please enter valid information.')
            return
        self.age = int(self.label3_entry.get())
        if self.age < 0:
            tkinter.messagebox.showinfo('Invalid','Please enter valid information.')
            return
        self.user = player.Player(self.name,str(self.age),'0','0','0')
        self.load.destroy()
        self.quit.pack(side = 'left')
        return self.user;

class Hangman(PlayerInformation):
    def __init__(self,word,guesses):
        PlayerInformation.__init__(self)
        self.word = word
        self.guesses = guesses
        #create hangman window
        self.main_window = tkinter.Tk()
        #create the frames
        self.top_frame = tkinter.Frame(self.main_window)
        self.frame2 = tkinter.Frame(self.main_window)
        self.frame3 = tkinter.Frame(self.main_window)
        self.frame4 = tkinter.Frame(self.main_window)
        self.frame5 = tkinter.Frame(self.main_window)
        self.frame6 = tkinter.Frame(self.main_window)
        self.frame7 = tkinter.Frame(self.main_window)
        self.frame8 = tkinter.Frame(self.main_window)
        self.frame9 = tkinter.Frame(self.main_window)
        self.frame10 = tkinter.Frame(self.main_window)
        self.bottom_frame = tkinter.Frame(self.main_window)
        #pack the frames
        self.top_frame.pack()
        self.frame2.pack()
        self.frame3.pack()
        self.frame4.pack()
        self.frame5.pack()
        self.frame6.pack()
        self.frame7.pack()
        self.frame8.pack()
        self.frame9.pack()
        self.frame10.pack()
        self.bottom_frame.pack()
        #create labels and pack
        self.top_label = tkinter.Label(self.top_frame,text = 'HANGMAN').pack()
        self.label2 = tkinter.Label(self.frame2,text = '_______').pack(side = 'left')
        self.label3 = tkinter.Label(self.frame3,text = '|       )').pack(side = 'left')
        self.label4 = tkinter.Label(self.frame4,text = '|        ').pack(side = 'left')
        self.label5 = tkinter.Label(self.frame5,text = '|        ').pack(side = 'left')
        self.label6 = tkinter.Label(self.frame6,text = '|        ').pack(side = 'left')
        self.label7 = tkinter.Label(self.frame7,text = '|        ').pack(side = 'left')
        self.label8 = tkinter.Label(self.frame8,text = '=====').pack(side = 'left')
        self.label9 = tkinter.Label(self.frame9,text = 'Enter a letter: ').pack(side = 'left')
        #creates dashes for length of word using string variable
        self.dash = tkinter.StringVar()
        self.length = ['-']*len(self.word)
        self.dash.set(self.length)
        self.label10 = tkinter.Label(self.frame10,textvariable = self.dash).pack()
        #creates entry widget for letter
        self.chosen = []                   
        self.entry1 = tkinter.Entry(self.frame9,width = 5)
        self.entry1.pack(side = 'left')
        #create buttons and pack
        self.guess = tkinter.Button(self.bottom_frame,text = 'Make Guess', \
                                    command = self.guess).pack(side = 'left')
        self.quit = tkinter.Button(self.bottom_frame,text = 'Quit', \
                                   command = self.main_window.destroy).pack(side = 'left')
        #enter mainloop
        tkinter.mainloop()

    def guess(self):
        #gets input
        self.letter = (self.entry1.get())
        self.letter = self.letter.upper()
        #validates input
        if self.letter.isalpha() is False or len(self.letter) != 1:
            tkinter.messagebox.showinfo('Invalid','Please enter one letter.')
            return
        #makes sure letter not already chosen
        if self.letter in self.chosen:
            tkinter.messagebox.showinfo('Chosen','Letter has already been picked.')
            return
        self.chosen.append(self.letter)
        #checks if letter in word
        for x in range(len(self.word)):
            if self.letter == self.word[x]:
                self.length[x] = self.letter
                self.dash.set(self.length)
                winsound.PlaySound('chime.wav',winsound.SND_FILENAME)
        if self.letter not in self.word:
            self.guesses -= 1
            winsound.PlaySound('buzzer_x.wav',winsound.SND_FILENAME)    
            if self.guesses == 6:
                self.label11 = tkinter.Label(self.frame4,text = '0').pack(side = 'left')
            if self.guesses == 5:
                self.label12 = tkinter.Label(self.frame5,text = '/').pack(side = 'left')
            if self.guesses == 4:
                self.label13 = tkinter.Label(self.frame5,text = '|').pack(side = 'left')
            if self.guesses == 3:
                self.label14 = tkinter.Label(self.frame5,text = '\\').pack(side = 'left')
            if self.guesses == 2:
                self.label15 = tkinter.Label(self.frame6,text = '|').pack(side = 'left')
            if self.guesses == 1:
                self.label16 = tkinter.Label(self.frame7,text = '/').pack(side = 'left')
            if self.guesses == 0:
                self.label17 = tkinter.Label(self.frame7,text = '\\').pack(side = 'left')
                self.user.set_loss()
                tkinter.messagebox.showinfo('Status','You have lost the game.' \
                                            '\nThe correct word was: ' + self.word)
                self.main_window.destroy()    
        if '-' not in self.length:
            winsound.PlaySound('exit_cue_y.wav',winsound.SND_FILENAME)
            self.user.set_win()
            tkinter.messagebox.showinfo('Status','You have won!!!')
            self.main_window.destroy()
